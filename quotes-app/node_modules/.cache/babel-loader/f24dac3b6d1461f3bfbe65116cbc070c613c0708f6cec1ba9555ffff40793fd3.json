{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Desktop\\\\Qoutes\\\\quotes-app\\\\src\\\\components\\\\QuoteBox.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faTumblr, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport languages from \"../languages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n    // Initialize state with default values\n    this.state = {\n      favoriteQuotes: [],\n      // an array to store favorite quotes\n      searchValue: \"\",\n      // a string to store search input value\n      fontSize: 16,\n      // set default font size to 16\n      bgColor: \"#f5f5f5\",\n      // set default background color to light grey\n      currentQuote: null // the currently displayed quote\n    };\n    // Bind methods to this\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\n    this.handleBgColorChange = this.handleBgColorChange.bind(this);\n    this.handleNewQuoteClick = this.handleNewQuoteClick.bind(this);\n  }\n  componentDidMount() {\n    // When the component mounts, select a random quote\n    this.selectRandomQuote();\n  }\n  selectRandomQuote() {\n    const {\n      quotes\n    } = this.props;\n    if (quotes && quotes.length > 0) {\n      const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n      this.setState({\n        currentQuote: randomQuote\n      });\n    }\n  }\n  handleFavoriteClick() {\n    // Add current quote to favorite quotes array\n    const {\n      currentQuote,\n      favoriteQuotes\n    } = this.state;\n    this.setState({\n      favoriteQuotes: [...favoriteQuotes, currentQuote]\n    });\n  }\n  handleSearchChange(e) {\n    // Update search input value\n    this.setState({\n      searchValue: e.target.value\n    });\n  }\n  handleFontSizeChange(e) {\n    // Update font size\n    this.setState({\n      fontSize: parseInt(e.target.value)\n    });\n  }\n  handleBgColorChange(e) {\n    // Update background color\n    this.setState({\n      bgColor: e.target.value\n    });\n  }\n  handleNewQuoteClick() {\n    // Select a new random quote\n    this.selectRandomQuote();\n  }\n  render() {\n    const {\n      currentQuote,\n      favoriteQuotes,\n      searchValue,\n      fontSize,\n      bgColor\n    } = this.state;\n    const {\n      newQuoteBtn,\n      tweetBtn,\n      tumblrBtn,\n      facebookBtn,\n      searchPlaceholder\n    } = languages[this.props.language];\n\n    // Set style for QuoteBox\n    const style = {\n      fontSize: `${fontSize}px`,\n      backgroundColor: bgColor\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-card\",\n      id: \"quote-card\",\n      style: style,\n      children: currentQuote && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote-text\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faQuoteLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"text\",\n            children: currentQuote.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote-author\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"author\",\n            children: [\"- \", currentQuote.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"new-quote\",\n            onClick: this.handleNewQuoteClick,\n            children: newQuoteBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"tweet-quote\",\n            onClick: this.handleFavoriteClick,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTwitter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"tumblr-quote\",\n            onClick: this.handleFavoriteClick,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTumblr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"facebook-quote\",\n            onClick: this.handleFavoriteClick,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFacebook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default QuoteBox;","map":{"version":3,"names":["React","FontAwesomeIcon","faQuoteLeft","faFacebook","faTumblr","faTwitter","languages","jsxDEV","_jsxDEV","Fragment","_Fragment","QuoteBox","Component","constructor","props","state","favoriteQuotes","searchValue","fontSize","bgColor","currentQuote","handleFavoriteClick","bind","handleSearchChange","handleFontSizeChange","handleBgColorChange","handleNewQuoteClick","componentDidMount","selectRandomQuote","quotes","length","randomQuote","Math","floor","random","setState","e","target","value","parseInt","render","newQuoteBtn","tweetBtn","tumblrBtn","facebookBtn","searchPlaceholder","language","style","backgroundColor","className","id","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","content","author","onClick"],"sources":["C:/Users/Mohammed/Desktop/Qoutes/quotes-app/src/components/QuoteBox.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebook, faTumblr, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport languages from \"../languages\";\r\n\r\nclass QuoteBox extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Initialize state with default values\r\n    this.state = {\r\n      favoriteQuotes: [], // an array to store favorite quotes\r\n      searchValue: \"\", // a string to store search input value\r\n      fontSize: 16, // set default font size to 16\r\n      bgColor: \"#f5f5f5\", // set default background color to light grey\r\n      currentQuote: null, // the currently displayed quote\r\n    };\r\n    // Bind methods to this\r\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\r\n    this.handleSearchChange = this.handleSearchChange.bind(this);\r\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\r\n    this.handleBgColorChange = this.handleBgColorChange.bind(this);\r\n    this.handleNewQuoteClick = this.handleNewQuoteClick.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // When the component mounts, select a random quote\r\n    this.selectRandomQuote();\r\n  }\r\n\r\n  selectRandomQuote() {\r\n    const { quotes } = this.props;\r\n    if (quotes && quotes.length > 0) {\r\n      const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n      this.setState({ currentQuote: randomQuote });\r\n    }\r\n  }\r\n\r\n  handleFavoriteClick() {\r\n    // Add current quote to favorite quotes array\r\n    const { currentQuote, favoriteQuotes } = this.state;\r\n    this.setState({\r\n      favoriteQuotes: [...favoriteQuotes, currentQuote],\r\n    });\r\n  }\r\n\r\n  handleSearchChange(e) {\r\n    // Update search input value\r\n    this.setState({\r\n      searchValue: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleFontSizeChange(e) {\r\n    // Update font size\r\n    this.setState({\r\n      fontSize: parseInt(e.target.value),\r\n    });\r\n  }\r\n\r\n  handleBgColorChange(e) {\r\n    // Update background color\r\n    this.setState({\r\n      bgColor: e.target.value,\r\n    });\r\n  }\r\n\r\n  handleNewQuoteClick() {\r\n    // Select a new random quote\r\n    this.selectRandomQuote();\r\n  }\r\n\r\n  render() {\r\n    const { currentQuote, favoriteQuotes, searchValue, fontSize, bgColor } = this.state;\r\n    const { newQuoteBtn, tweetBtn, tumblrBtn, facebookBtn, searchPlaceholder } = languages[this.props.language];\r\n\r\n    // Set style for QuoteBox\r\n    const style = {\r\n      fontSize: `${fontSize}px`,\r\n      backgroundColor: bgColor,\r\n    };\r\n\r\n    return (\r\n      <div className=\"quote-card\" id=\"quote-card\" style={style}>\r\n        {currentQuote && (\r\n          <>\r\n            <div className=\"quote-text\">\r\n              <FontAwesomeIcon icon={faQuoteLeft} />\r\n              <span id=\"text\">{currentQuote.content}</span>\r\n            </div>\r\n            <div className=\"quote-author\">\r\n              <span id=\"author\">- {currentQuote.author}</span>\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <button className=\"button\" id=\"new-quote\" onClick={this.handleNewQuoteClick}>\r\n                {newQuoteBtn}\r\n                </button>\r\n                <button className=\"button\" id=\"tweet-quote\" onClick={this.handleFavoriteClick}>\r\n                    <FontAwesomeIcon icon={faTwitter} />\r\n                </button>\r\n                <button className=\"button\" id=\"tumblr-quote\" onClick={this.handleFavoriteClick}>\r\n                    <FontAwesomeIcon icon={faTumblr} />\r\n                </button>\r\n                <button className=\"button\" id=\"facebook-quote\" onClick={this.handleFavoriteClick}>\r\n                    <FontAwesomeIcon icon={faFacebook} />\r\n                </button>\r\n            </div>\r\n            </>\r\n        )}\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default QuoteBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}