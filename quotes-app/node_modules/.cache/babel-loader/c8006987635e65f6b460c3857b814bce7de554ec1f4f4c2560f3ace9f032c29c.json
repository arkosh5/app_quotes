{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Desktop\\\\Qoutes\\\\quotes-app\\\\src\\\\components\\\\QuoteBox.jsx\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faFacebook, faTumblr, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport languages from \"../languages\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n    // Initialize state with default values\n    this.state = {\n      favoriteQuotes: [],\n      // an array to store favorite quotes\n      searchValue: \"\",\n      // a string to store search input value\n      fontSize: 16,\n      // set default font size to 16\n      bgColor: \"#f5f5f5\",\n      // set default background color to light grey\n      currentQuote: null // the currently displayed quote\n    };\n    // Bind methods to this\n    this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\n    this.handleSearchChange = this.handleSearchChange.bind(this);\n    this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\n    this.handleBgColorChange = this.handleBgColorChange.bind(this);\n    this.handleNewQuoteClick = this.handleNewQuoteClick.bind(this);\n  }\n  componentDidMount() {\n    // When the component mounts, select a random quote\n    this.selectRandomQuote();\n  }\n  selectRandomQuote() {\n    const {\n      quotes\n    } = this.props;\n    if (quotes && quotes.length > 0) {\n      const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\n      this.setState({\n        currentQuote: randomQuote\n      });\n    }\n  }\n  handleFavoriteClick() {\n    // Add current quote to favorite quotes array\n    const {\n      currentQuote,\n      favoriteQuotes\n    } = this.state;\n    this.setState({\n      favoriteQuotes: [...favoriteQuotes, currentQuote]\n    });\n  }\n  handleSearchChange(e) {\n    // Update search input value\n    this.setState({\n      searchValue: e.target.value\n    });\n  }\n  handleFontSizeChange(e) {\n    // Update font size\n    this.setState({\n      fontSize: parseInt(e.target.value)\n    });\n  }\n  handleBgColorChange(e) {\n    // Update background color\n    this.setState({\n      bgColor: e.target.value\n    });\n  }\n  handleNewQuoteClick() {\n    // Select a new random quote\n    this.selectRandomQuote();\n  }\n  render() {\n    const {\n      currentQuote,\n      favoriteQuotes,\n      searchValue,\n      fontSize,\n      bgColor\n    } = this.state;\n    const {\n      newQuoteBtn,\n      tweetBtn,\n      tumblrBtn,\n      facebookBtn,\n      searchPlaceholder\n    } = languages[this.props.language];\n\n    // Set style for QuoteBox\n    const style = {\n      fontSize: `${fontSize}px`,\n      backgroundColor: bgColor\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quote-card\",\n      id: \"quote-card\",\n      style: style,\n      children: currentQuote && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote-text\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faQuoteLeft\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"text\",\n            children: currentQuote.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"quote-author\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"author\",\n            children: [\"- \", currentQuote.author]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"new-quote\",\n            onClick: this.handleNewQuoteClick,\n            children: newQuoteBtn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            id: \"favorite-quote\",\n            onClick: this.handleFavoriteClick,\n            children: \"Add to favorites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"button\",\n            id: \"tweet-quote\",\n            href: `https://twitter.com/intent/tweet?text=${quote} - ${author}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTwitter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), tweetBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"button\",\n            id: \"tumblr-quote\",\n            href: `https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=${author}&content=${quote}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTumblr\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), tumblrBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"button\",\n            id: \"facebook-quote\",\n            href: `https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.facebook.com%2F&quote=${quote} - ${author}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFacebook\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), facebookBtn]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"search-input\",\n            id: \"search-input\",\n            placeholder: searchPlaceholder,\n            onChange: this.handleSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-size-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"font-size\",\n            children: \"Font size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            className: \"font-size-input\",\n            id: \"font-size\",\n            min: \"10\",\n            max: \"30\",\n            value: this.state.fontSize,\n            onChange: this.handleFontSizeChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-color-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"bg-color\",\n            children: \"Background color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            className: \"bg-color-input\",\n            id: \"bg-color\",\n            value: this.state.bgColor,\n            onChange: this.handleBgColorChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"favorite-quotes-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Favorite quotes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"favorite-quotes-list\",\n            children: favoriteQuotes.map((quote, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: quote.content\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default QuoteBox;","map":{"version":3,"names":["React","FontAwesomeIcon","faQuoteLeft","faFacebook","faTumblr","faTwitter","languages","jsxDEV","_jsxDEV","Fragment","_Fragment","QuoteBox","Component","constructor","props","state","favoriteQuotes","searchValue","fontSize","bgColor","currentQuote","handleFavoriteClick","bind","handleSearchChange","handleFontSizeChange","handleBgColorChange","handleNewQuoteClick","componentDidMount","selectRandomQuote","quotes","length","randomQuote","Math","floor","random","setState","e","target","value","parseInt","render","newQuoteBtn","tweetBtn","tumblrBtn","facebookBtn","searchPlaceholder","language","style","backgroundColor","className","id","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","content","author","onClick","href","quote","rel","type","placeholder","onChange","htmlFor","min","max","map","index"],"sources":["C:/Users/Mohammed/Desktop/Qoutes/quotes-app/src/components/QuoteBox.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFacebook, faTumblr, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport languages from \"../languages\";\r\n\r\nclass QuoteBox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // Initialize state with default values\r\n        this.state = {\r\n            favoriteQuotes: [], // an array to store favorite quotes\r\n            searchValue: \"\", // a string to store search input value\r\n            fontSize: 16, // set default font size to 16\r\n            bgColor: \"#f5f5f5\", // set default background color to light grey\r\n            currentQuote: null, // the currently displayed quote\r\n        };\r\n        // Bind methods to this\r\n        this.handleFavoriteClick = this.handleFavoriteClick.bind(this);\r\n        this.handleSearchChange = this.handleSearchChange.bind(this);\r\n        this.handleFontSizeChange = this.handleFontSizeChange.bind(this);\r\n        this.handleBgColorChange = this.handleBgColorChange.bind(this);\r\n        this.handleNewQuoteClick = this.handleNewQuoteClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        // When the component mounts, select a random quote\r\n        this.selectRandomQuote();\r\n    }\r\n\r\n    selectRandomQuote() {\r\n        const {quotes} = this.props;\r\n        if (quotes && quotes.length > 0) {\r\n            const randomQuote = quotes[Math.floor(Math.random() * quotes.length)];\r\n            this.setState({currentQuote: randomQuote});\r\n        }\r\n    }\r\n\r\n    handleFavoriteClick() {\r\n        // Add current quote to favorite quotes array\r\n        const {currentQuote, favoriteQuotes} = this.state;\r\n        this.setState({\r\n            favoriteQuotes: [...favoriteQuotes, currentQuote],\r\n        });\r\n    }\r\n\r\n    handleSearchChange(e) {\r\n        // Update search input value\r\n        this.setState({\r\n            searchValue: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleFontSizeChange(e) {\r\n        // Update font size\r\n        this.setState({\r\n            fontSize: parseInt(e.target.value),\r\n        });\r\n    }\r\n\r\n    handleBgColorChange(e) {\r\n        // Update background color\r\n        this.setState({\r\n            bgColor: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleNewQuoteClick() {\r\n        // Select a new random quote\r\n        this.selectRandomQuote();\r\n    }\r\n\r\n    render() {\r\n        const {currentQuote, favoriteQuotes, searchValue, fontSize, bgColor} = this.state;\r\n        const {newQuoteBtn, tweetBtn, tumblrBtn, facebookBtn, searchPlaceholder} = languages[this.props.language];\r\n\r\n        // Set style for QuoteBox\r\n        const style = {\r\n            fontSize: `${fontSize}px`,\r\n            backgroundColor: bgColor,\r\n        };\r\n\r\n        return (\r\n            <div className=\"quote-card\" id=\"quote-card\" style={style}>\r\n                {currentQuote && (\r\n                    <>\r\n                        <div className=\"quote-text\">\r\n                            <FontAwesomeIcon icon={faQuoteLeft}/>\r\n                            <span id=\"text\">{currentQuote.content}</span>\r\n                        </div>\r\n                        <div className=\"quote-author\">\r\n                            <span id=\"author\">- {currentQuote.author}</span>\r\n                        </div>\r\n                        <div className=\"button-container\">\r\n                            <button className=\"button\" id=\"new-quote\" onClick={this.handleNewQuoteClick}>\r\n                                {newQuoteBtn}\r\n                            </button>\r\n                            <button\r\n                                className=\"button\"\r\n                                id=\"favorite-quote\"\r\n                                onClick={this.handleFavoriteClick}\r\n                            >\r\n                                Add to favorites\r\n                            </button>\r\n                            <a\r\n                                className=\"button\"\r\n                                id=\"tweet-quote\"\r\n                                href={`https://twitter.com/intent/tweet?text=${quote} - ${author}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faTwitter}/>\r\n                                {tweetBtn}\r\n                            </a>\r\n                            <a\r\n                                className=\"button\"\r\n                                id=\"tumblr-quote\"\r\n                                href={`https://www.tumblr.com/widgets/share/tool?posttype=quote&tags=quotes,freecodecamp&caption=${author}&content=${quote}&canonicalUrl=https%3A%2F%2Fwww.tumblr.com%2Fbuttons&shareSource=tumblr_share_button`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faTumblr}/>\r\n                                {tumblrBtn}\r\n                            </a>\r\n                            <a\r\n                                className=\"button\"\r\n                                id=\"facebook-quote\"\r\n                                href={`https://www.facebook.com/sharer/sharer.php?u=https%3A%2F%2Fwww.facebook.com%2F&quote=${quote} - ${author}`}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                            >\r\n                                <FontAwesomeIcon icon={faFacebook}/>\r\n                                {facebookBtn}\r\n                            </a>\r\n                        </div>\r\n                        <div className=\"search-container\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"search-input\"\r\n                                id=\"search-input\"\r\n                                placeholder={searchPlaceholder}\r\n                                onChange={this.handleSearchChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"font-size-container\">\r\n                            <label htmlFor=\"font-size\">Font size</label>\r\n                            <input\r\n                                type=\"range\"\r\n                                className=\"font-size-input\"\r\n                                id=\"font-size\"\r\n                                min=\"10\"\r\n                                max=\"30\"\r\n                                value={this.state.fontSize}\r\n                                onChange={this.handleFontSizeChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"bg-color-container\">\r\n                            <label htmlFor=\"bg-color\">Background color</label>\r\n                            <input\r\n                                type=\"color\"\r\n                                className=\"bg-color-input\"\r\n                                id=\"bg-color\"\r\n                                value={this.state.bgColor}\r\n                                onChange={this.handleBgColorChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"favorite-quotes-container\">\r\n                            <h2>Favorite quotes</h2>\r\n                            <ul className=\"favorite-quotes-list\">\r\n                                {favoriteQuotes.map((quote, index) => (\r\n                                    <li key={index}>{quote.content}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default QuoteBox;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}