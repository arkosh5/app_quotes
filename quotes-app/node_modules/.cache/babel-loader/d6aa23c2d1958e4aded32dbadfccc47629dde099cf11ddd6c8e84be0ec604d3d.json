{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mohammed\\\\Desktop\\\\Qoutes\\\\quotes-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Initialize state with default values\n    this.state = {\n      quote: \"Don't cry because it's over, smile because it happened.\",\n      author: \"Dr. Seuss\",\n      isLoading: false\n    };\n    // Bind methods to this\n    this.getNewQuote = this.getNewQuote.bind(this);\n  }\n  componentDidMount() {\n    // Get a new quote when component mounts\n    this.getNewQuote();\n  }\n  getNewQuote() {\n    // Set loading state to true\n    this.setState({\n      isLoading: true\n    });\n    // Fetch a new quote from API\n    fetch(\"https://api.quotable.io/random\").then(response => response.json()).then(data => {\n      // Update state with new quote data\n      this.setState({\n        quote: data.content,\n        author: data.author,\n        isLoading: false\n      });\n    }).catch(error => {\n      // Handle error\n      console.error(error);\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Random Quote Machine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuoteBox, {\n        quote: this.state.quote,\n        author: this.state.author,\n        isLoading: this.state.isLoading,\n        getNewQuote: this.getNewQuote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","QuoteBox","jsxDEV","_jsxDEV","App","Component","constructor","props","state","quote","author","isLoading","getNewQuote","bind","componentDidMount","setState","fetch","then","response","json","data","content","catch","error","console","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/Mohammed/Desktop/Qoutes/quotes-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport QuoteBox from \"./components/QuoteBox\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // Initialize state with default values\n    this.state = {\n      quote: \"Don't cry because it's over, smile because it happened.\",\n      author: \"Dr. Seuss\",\n      isLoading: false,\n    };\n    // Bind methods to this\n    this.getNewQuote = this.getNewQuote.bind(this);\n  }\n\n  componentDidMount() {\n    // Get a new quote when component mounts\n    this.getNewQuote();\n  }\n\n  getNewQuote() {\n    // Set loading state to true\n    this.setState({\n      isLoading: true,\n    });\n    // Fetch a new quote from API\n    fetch(\"https://api.quotable.io/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        // Update state with new quote data\n        this.setState({\n          quote: data.content,\n          author: data.author,\n          isLoading: false,\n        });\n      })\n      .catch((error) => {\n        // Handle error\n        console.error(error);\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Random Quote Machine</h1>\n        {/* Pass state values as props to QuoteBox */}\n        <QuoteBox\n          quote={this.state.quote}\n          author={this.state.author}\n          isLoading={this.state.isLoading}\n          getNewQuote={this.getNewQuote}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,SAASJ,KAAK,CAACK,SAAS,CAAC;EAChCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ;IACA,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,yDAAyD;MAChEC,MAAM,EAAE,WAAW;MACnBC,SAAS,EAAE;IACb,CAAC;IACD;IACA,IAAI,CAACC,WAAW,GAAG,IAAI,CAACA,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAChD;EAEAC,iBAAiBA,CAAA,EAAG;IAClB;IACA,IAAI,CAACF,WAAW,EAAE;EACpB;EAEAA,WAAWA,CAAA,EAAG;IACZ;IACA,IAAI,CAACG,QAAQ,CAAC;MACZJ,SAAS,EAAE;IACb,CAAC,CAAC;IACF;IACAK,KAAK,CAAC,gCAAgC,CAAC,CACpCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd;MACA,IAAI,CAACL,QAAQ,CAAC;QACZN,KAAK,EAAEW,IAAI,CAACC,OAAO;QACnBX,MAAM,EAAEU,IAAI,CAACV,MAAM;QACnBC,SAAS,EAAE;MACb,CAAC,CAAC;IACJ,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN;EAEAE,MAAMA,CAAA,EAAG;IACP,oBACEtB,OAAA;MAAKuB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBxB,OAAA;QAAAwB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAE7B5B,OAAA,CAACF,QAAQ;QACPQ,KAAK,EAAE,IAAI,CAACD,KAAK,CAACC,KAAM;QACxBC,MAAM,EAAE,IAAI,CAACF,KAAK,CAACE,MAAO;QAC1BC,SAAS,EAAE,IAAI,CAACH,KAAK,CAACG,SAAU;QAChCC,WAAW,EAAE,IAAI,CAACA;MAAY;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAEV;AACF;AAEA,eAAe3B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}